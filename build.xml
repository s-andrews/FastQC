<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="FastQC">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="11"/>
    <property name="source" value="11"/>
    <path id="FastQC.classpath">
        <pathelement location="bin"/>
        <pathelement location="jbzip2-0.9.jar"/>
        <pathelement location="sam-1.103.jar"/>
        <pathelement location="cisd-jhdf5.jar"/>
        <pathelement location="htsjdk.jar"/>
        <!-- Include any third-party libs placed in lib/ -->
        <fileset dir="lib" includes="**/*.jar" erroronmissingdir="false" />
    </path>
    <path id="test.classpath">
        <!-- Reuse main classpath and add test output dir -->
        <path refid="FastQC.classpath" />
        <pathelement location="test/bin" />
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir=".">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="."/>
            <classpath refid="FastQC.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="FastQCApplication">
        <java classname="uk.ac.babraham.FastQC.FastQCApplication" failonerror="true" fork="yes">
            <classpath refid="FastQC.classpath"/>
        </java>
    </target>
    
    <!-- ===== JUnit 5 targets ===== -->
    <target name="init-test">
        <mkdir dir="test/bin"/>
        <mkdir dir="test/reports"/>
    </target>
    
    <target name="compile-tests" depends="build,init-test">
        <javac debug="true" debuglevel="${debuglevel}" destdir="test/bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="test"/>
            <classpath refid="test.classpath"/>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
        <echo message="Running JUnit 5 tests..."/>
        <junitlauncher haltOnFailure="true" printSummary="true">
            <classpath refid="test.classpath"/>
            <testclasses outputdir="test/reports">
                <fileset dir="test/bin">
                    <include name="**/*Test.class"/>
                    <include name="**/Test*.class"/>
                </fileset>
                <listener type="legacy-xml" sendSysOut="true" sendSysErr="true"/>
                <listener type="legacy-plain" sendSysOut="true"/>
            </testclasses>
        </junitlauncher>
    </target>
    
    <target name="clean-test">
        <delete dir="test/bin"/>
        <delete dir="test/reports"/>
    </target>
</project>
